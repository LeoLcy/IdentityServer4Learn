如果你高度信任某个应用，RFC 6749 也允许用户把用户名和密码，直接告诉该应用。该应用就使用你的密码，申请令牌，这种方式称为"密码式"（password）。

第一步，A 网站要求用户提供 B 网站的用户名和密码。拿到以后，A 就直接向 B 请求令牌。
new Client
                {
                    ClientId = "password_grant",
                    ClientSecrets = { new Secret("secret".Sha256()) },
                    ClientName = "password_grant Client",
                    AllowedGrantTypes = GrantTypes.ResourceOwnerPassword,
                    AllowedScopes =
                    {
                        IdentityServerConstants.StandardScopes.OpenId,
                        IdentityServerConstants.StandardScopes.Profile,
                        "api1"
                    }
                }
post https://localhost:5011/connect/token
client_id:password_grant
client_secret:secret
grant_type:password
username:alice
password:password
上面 URL 中，grant_type参数是授权方式，这里的password表示"密码式"，username和password是 B 的用户名和密码。

第二步，B 网站验证身份通过后，直接给出令牌。注意，这时不需要跳转，而是把令牌放在 JSON 数据里面，作为 HTTP 回应，A 因此拿到令牌。
{
    "access_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6InNPX21wcDBqZzN3eEpLZncxcjJQanciLCJ0eXAiOiJhdCtqd3QifQ.eyJuYmYiOjE1OTI4MDY3NzgsImV4cCI6MTU5MjgxMDM3OCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAxMSIsImF1ZCI6ImFwaTEiLCJjbGllbnRfaWQiOiJwYXNzd29yZF9ncmFudCIsInN1YiI6IjEiLCJhdXRoX3RpbWUiOjE1OTI4MDY3NzgsImlkcCI6ImxvY2FsIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsImFwaTEiXSwiYW1yIjpbInB3ZCJdfQ.PKQ-k6Ajz_aCgyPBDZUWTk-SEf_8QjoKXhqPE6GUOnsw7idEXGz9qgXbKnRNHfbnqkyrQCuSQlqaYLwe7QEYjE7zet_F3yBXzKRfrvLYZhiwAeXWyXJHg_c_2-cWMIq6E0bg-6Ik_lDIadQmZPA7dMZ0eWD0jqotgS0r6H7cDCKLejvSwafplGgWSxuJYdKtka7JSuTUqbjaTjFtG_4oFs5tNy8WX04VzUF9AJJwgHplF6VyNRjL3Hw2PKqjDqiwR0AtxlEbhtcPmeQlC00FepDQ47XGfPCe5-P4tUILSLyVSqSZho4C0fgDrdaSgDslHgz9QI3D6yLd-eRb0DX6dg",
    "expires_in": 3600,
    "token_type": "Bearer",
    "scope": "api1 openid profile"
}
这种方式需要用户给出自己的用户名/密码，显然风险很大，因此只适用于其他授权方式都无法采用的情况，而且必须是用户高度信任的应用。